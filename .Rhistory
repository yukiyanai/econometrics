dir.create("data")
#| message: false
library(tidyverse)
#| message: false
theme_set(theme_gray(base_size = 9,
base_family = "HiraginoSans-W3"))
download.file(
url = "https://yukiyanai.github.io/jp/classes/econometrics1/contents/data/fake_data_02.csv",
destfile = "data/fake_data_02.csv"
)
mycsv1 <- read_csv('data/fake_data_02.csv')
glimpse(mycsv1)
download.file(
url = "http://yukiyanai.github.io/jp/classes/econometrics1/contents/data/fake_data_03.xlsx",
destfile = "data/fake_data_03.xlsx"
)
mycsv2 <- read_csv("data/fake_data_03.csv")
glimpse(mycsv2)
pacman::p_load(readxl)
myxl <- read_excel("data/fake_data_03.xlsx")
glimpse(myxl)
names(mycsv1)
names(mycsv2)
mean(mycsv1$height)
mean(mycsv2$height)
download.file(
url = "http://yukiyanai.github.io/jp/classes/econometrics1/contents/data/fake_data_stata.dta",
destfile = "data/fake_data_stata.dta"
)
pacman::p_load(haven)
mydta <- read_dta('data/fake_data_stata.dta')
glimpse(mydta)
download.file(url = "https://yukiyanai.github.io/jp/classes/econometrics1/contents/data/fake_data_spss.sav",
destfile = "data/fake_data_spss.sav")
mysav <- read_sav("data/fake_data_spss.sav")
glimpse(mysav)
download.file(
url = "https://raw.githubusercontent.com/yukiyanai/quant-methods-R/master/data/hr-data.csv",
destfile = "data/hr-data.csv"
)
myd <- read_csv("data/hr-data.csv")
with(myd, table(year, party_jpn))
LDP1996 <- filter(myd, year == 1996,
party_jpn == "自民党")
with(LDP1996, table(year, party_jpn))
LDP1996 <- myd |>
filter(year == 1996,
party_jpn == "自民党")
names(myd)
sub1 <- myd |>
select(year, name, vs)
names(sub1)
sub2 <- myd |>
select(kun:party)
names(sub2)
sub3 <- myd |>
select(!c(status, vs))
names(sub3)
sub4 <- myd |>
select(starts_with("e"))
names(sub4)
sub5 <- myd |>
select(ends_with('d'))
names(sub5)
sub6 <- myd |>
select(contains("te"))
names(sub6)
LDP1996_sub1 <- myd |>
filter(year == 1996,
party_jpn == "自民党") |>
select(year, name, vs)
names(LDP1996_sub1)
myd <- myd |>
mutate(turnout2 = turnout / 100)
summary(myd$turnout)
summary(myd$turnout2)
rbind(
summary(myd$turnout),
summary(myd$turnout2)
)
myd <- myd |>
mutate(LDP = ifelse(party_jpn == "自民党", 1, 0),
DPJ = ifelse(party_jpn == "民主党", 1, 0))
with(myd, table(party_jpn, LDP))
with(myd, table(party_jpn, DPJ))
myd <- myd |>
rename(tohyoritsu = turnout2)
names(myd)
download.file(url = "https://git.io/fAnmx",
destfile = "data/wide-table.csv")
GDP <- read_csv("data/wide-table.csv")
GDP
GDP_long <- GDP |>
pivot_longer(cols = -country,      # 縦長にする範囲：country 以外
names_to = "year",    # 元の列がどれだっかを区別する変数：年
names_prefix = "gdp", # 元の変数名のうち、区別に不要な部分
values_to = "gdp")    # 元の値を保持する変数名
GDP_long
GDP_long <- GDP |>
pivot_longer(cols = !country,      # 縦長にする範囲：country 以外
names_to = "year",    # 元の列がどれだっかを区別する変数：年
names_prefix = "gdp", # 元の変数名のうち、区別に不要な部分
values_to = "gdp")    # 元の値を保持する変数名
GDP_long
GDP_wide <- GDP_long |>
pivot_wider(names_from = year,    # 横長にした後の列を区別する変数
names_prefix = "gdp", # 横長にした後の変数名の冒頭につける文字列（オプション）
values_from = gdp)    # 縦長から横長に分配する値
GDP_wide
newd <- tibble(id = 1:100,
x = rnorm(100, mean = 10, sd = 2)) |>
mutate(y = 1.2 + 0.8 * x + rnorm(100, mean = 0, sd = 1))
glimpse(newd)
#| message: false
pacman::p_load(tidyverse,
haven,
readxl)
#| eval: false
runGitHub(username = "yukiyanai",
repo = "simple_ols_sim",
ref = "main")
#| message: false
pacman::p_load(tidyverse,
broom,
shiny)
#| eval: false
runGitHub(username = "yukiyanai",
repo = "simple_ols_sim",
ref = "main")
pacman::p_load(tidyverse,
broom)
if (.Platform$OS.type == "windows") {
if (require(fontregisterer)) {
my_font <- "Yu Gothic"
} else {
my_font <- "Japan1"
}
} else if (capabilities("aqua")) {
my_font <- "HiraginoSans-W3"
} else {
my_font <- "IPAexGothic"
}
theme_set(theme_gray(base_size = 9,
base_family = my_font))
HR <- read_csv("data/hr-data.csv")
HR <- read_csv("data/hr-data.csv")
HR <- HR |>
mutate(experience = as.numeric(status == "現職" | status == "元職"),
expm = exp / 10^6)
HR09 <- HR |>
filter(year == 2009,
!is.na(expm))
fit_3 <- lm(voteshare ~ experience + expm,
data = HR09)
tidy(fit_3, conf.int = TRUE)
summary(HR09$expm)
money <- 0:25
pred0 <- coef(fit_3)[1] +       # 切片
coef(fit_3)[2] * 0  +  # 議員経験なしなので0
coef(fit_3)[3] * money # 選挙費用の値ごとに計算する
pred0[1:3]
df0 <- tibble(money = money,
predicted0 = pred0)
df0
for (i in 2:length(money)) {
print(pred0[i] - pred0[i - 1])
}
pred1 <- coef(fit_3)[1] +       # 切片
coef(fit_3)[2] * 1  +  # 議員経験ありなので1
coef(fit_3)[3] * money # 選挙費用の値ごとに計算する
pred1[1:3]
df1 <- tibble(money = money,
predicted1 = pred1)
df1
print(pred1[i] - pred1[i - 1])
for (i in 2:length(money)) {
print(pred1[i] - pred1[i - 1])
}
df01 <- df0 |>
right_join(df1, by = "money")
df01
df01 <- df01 |>
mutate(dif_experience = predicted1 - predicted0)
df01
reg1 <- lm(expm ~ experience,
data = HR09)
res1 <- reg1$residuals
reg2 <- lm(voteshare ~ experience,
data = HR09)
res2 <- reg2$residuals
reg3 <- lm(res2 ~ res1)
pred <- expand_grid(
expm = seq(from = min(HR09$expm, na.rm = TRUE),
to = max(HR09$expm, na.rm = TRUE),
length.out = 100),
experience = c(0,1))
pred <- pred |>
mutate(v_hat = predict(fit_3, newdata = pred))
p3 <- ggplot(HR09, aes(x = expm,
color = as.factor(experience),
shape = as.factor(experience))) +
geom_point(size = 1, aes(y = voteshare)) +
geom_line(data = pred, aes(y = v_hat)) +
scale_color_brewer(palette = "Set1",
name = '議員経験',
labels = c('なし', 'あり')) +
scale_shape_discrete(name = '議員経験',
labels = c('なし', 'あり')) +
guides(color = guide_legend(reverse = TRUE),
shape = guide_legend(reverse = TRUE)) +
labs(x = "選挙費用（100万円）",
y = "得票率（%）",
title = "得票率と選挙費用の関係")
plot(p3)
err <- predict(fit_3,
newdata = pred,
se.fit = TRUE)
pred$lower <- err$fit + qt(0.025, df = err$df) * err$se.fit
pred$upper <- err$fit + qt(0.975, df = err$df) * err$se.fit
p3_ci95 <- p3 +
geom_smooth(data = pred,
aes(y = v_hat, ymin = lower, ymax = upper),
stat = "identity")
plot(p3_ci95)
HR <- read_csv("data/hr-data.csv")
HR <- HR |>
mutate(experience = as.numeric(status == "現職" | status == "元職"))
HR09 <- HR |>
filter(year == 2009) |>
na.omit()
fit_1 <- lm(voteshare ~ exp,
data = HR09)
tidy(fit_1, conf.int = TRUE)
fit_2 <- lm(voteshare ~ expm,
data = HR09)
## expm という変数をあらかじめ作っていないときは、次のようにする
#fit_3 <- lm(voteshare ~ I(exp / 10^6), data = HR09)
tidy(fit_2, conf.int = TRUE)
HR09 <- HR09 |>
mutate(z_expm = (expm - mean(expm, na.rm = TRUE)) / sd(expm, na.rm = TRUE))
summary(HR09$z_expm)
fit_4 <- lm(voteshare ~ z_expm,
data = HR09)
tidy(fit_4, conf.int = TRUE)
fit_5 <- lm(voteshare ~ experience * expm, data = HR09)
tidy(fit_5, conf.int = TRUE)
glance(fit_5)
HR09 <- HR09 |>
mutate(c_experience = experience - mean(experience),
c_expm = expm - mean(expm, na.rm = TRUE))
fit_5_c <- lm(voteshare ~ c_experience * c_expm, data = HR09)
tidy(fit_5_c, conf.int = TRUE)
glance(fit_5)
glance(fit_5)
myd <- read_csv("data/fake_income.csv")
download.file(
url = "https://yukiyanai.github.io/jp/classes/econometrics1/contents/data/fake_income.csv",
dest = "data/fake_income.csv"
)
myd <- read_csv("data/fake_income.csv")
glimpse(myd)
fit_mincer <- lm(log(income) ~ education + experience + I(experience^2),
data = myd)
tidy(fit_mincer, conf.int = TRUE)
(mean_educ <- mean(myd$education))
exper_vec <- with(myd, seq(from = min(experience),
to = max(experience),
length.out = 1000))
pred_mean <- coef(fit_mincer)[1] +
coef(fit_mincer)[2] * mean_educ +
coef(fit_mincer)[3] * exper_vec +
coef(fit_mincer)[4] * exper_vec^2
dd <- tibble(exper = exper_vec,
pred_mean  = pred_mean)   # ggplot2 で使うためにデータフレームを作る
plt_1 <- ggplot(dd, aes(x = exper, y = pred_mean)) +
geom_line() +
labs(x = "就業経験年数", y = "対数年収の予測値",
title = "修学年数が平均値（13.8年）のとき")
plot(plt_1)
plt_2 <- ggplot(dd, aes(x = exper, y = exp(pred_mean))) +
geom_line() +
labs(x = "就業経験年数",
y = "年収の予測値（万円）",
title = "修学年数が平均値（13.8年）のとき")
plot(plt_2)
(min_educ <- min(myd$education))
pred_min <- coef(fit_mincer)[1] +
coef(fit_mincer)[2] * min_educ +
coef(fit_mincer)[3] * exper_vec +
coef(fit_mincer)[4] * exper_vec^2
dd$pred_min <- pred_min
plt_3 <- ggplot(dd, aes(x = exper, y = exp(pred_min))) +
geom_line() +
labs(x = "就業経験年数",
y = "年収の予測値（万円）",
title = "修学年数が最小値（9年）のとき")
plot(plt_3)
(max_educ <- max(myd$education))
pred_max <- coef(fit_mincer)[1] +
coef(fit_mincer)[2] * max_educ +
coef(fit_mincer)[3] * exper_vec +
coef(fit_mincer)[4] * exper_vec^2
dd$pred_max <- pred_max
plt_4 <- ggplot(dd, aes(x = exper, y = exp(pred_max))) +
geom_line() +
labs(x = "就業経験年数",
y = "年収の予測値（万円）",
title = "修学年数が最大値（18年）のとき")
plot(plt_4)
head(dd)
dim(dd)
dd_long <- dd |>
pivot_longer(cols = pred_mean:pred_max,
names_to = "education",
names_prefix = "pred_",
values_to = "predicted")
head(dd_long)
dim(dd_long)
plt5 <- ggplot(dd_long,
aes(x = exper, y = exp(predicted), color = education)) +
geom_line() +
labs(x = "就業経験年数", y = "年収の予測値（万円）") +
scale_color_brewer(palette = "Accent",
name = "修学年数",
labels = c("最大値 (18年）", "平均値（13.8年）", "最小値（9年）"))
plot(plt5)
HR <- read_csv("data/hr-data.csv")
HR <- HR |>
mutate(experience = as.numeric(status == "現職" | status == "元職"))
HR09 <- HR |>
filter(year == 2009,
!is.na(expm))
fit_1 <- lm(voteshare ~ experience, data = HR09)
fit_2 <- lm(voteshare ~ expm, data = HR09)
fit_3 <- lm(voteshare ~ experience + expm, data = HR09)
fit_4 <- lm(voteshare ~ experience * expm, data = HR09)
HR <- read_csv("data/hr-data.csv")
HR <- HR |>
mutate(experience = as.numeric(status == "現職" | status == "元職"))
HR09 <- HR |>
filter(year == 2009,
!is.na(expm)) |>
dplyr::select(voteshare, expm, experience)
summary(HR09)
apply(HR09, MARGIN = 2, FUN = sd)
fit_1 <- lm(voteshare ~ expm * experience, data = HR09)
tidy(fit_1, conf.int = TRUE)
HR09 <- HR09 |>
mutate(expm_c = expm - mean(expm))
fit_2 <- lm(voteshare ~ expm_c * experience, data = HR09)
tidy(fit_2, conf.int = TRUE)
int1 <- ggplot(HR09, aes(x = expm,
y = voteshare,
color = as.factor(experience))) +
geom_smooth(method = "lm") +
geom_point() +
scale_color_brewer(palette = "Set1",
name = "議員経験",
labels = c("なし", "あり")) +
labs(x = "選挙費用（100万円）",
y = "得票率 (%)")
plot(int1)
fit_3 <- lm(voteshare ~ experience + expm_c:experience,
data = HR09)
tidy(fit_3, conf.int = TRUE)
money <- seq(from = min(HR09$expm),
to = max(HR09$expm),
length.out = 100)
money_c <- money - mean(money)
fitted3_x0 <-
coef(fit_3)[1] +
coef(fit_3)[2] * 0 +
coef(fit_3)[3] * money_c * 0
fitted3_x1 <-
coef(fit_3)[1] +
coef(fit_3)[2] * 1 +
coef(fit_3)[3] * money_c * 1
df_fitted <- tibble(money, money_c, fitted3_x0, fitted3_x1)
plt3 <- ggplot(df_fitted) +
geom_line(aes(x = money, y = fitted3_x0), color = "red") +
geom_line(aes(x = money, y = fitted3_x1), color = "blue") +
geom_point(data = HR09, aes(x = expm,
y = voteshare,
color = as.factor(experience))) +
scale_color_brewer(palette = "Set1",
name = "議員経験",
labels = c("なし", "あり")) +
labs(x = "選挙費用（100万円）", y = "得票率 (%)")
plot(plt3)
fit_4 <- lm(voteshare ~ expm_c + expm_c:experience,
data = HR09)
tidy(fit_4, conf.int = TRUE)
fitted4_x0 <-
coef(fit_4)[1] +
coef(fit_4)[2] * money_c +
coef(fit_4)[3] * money_c * 0
q('no')
